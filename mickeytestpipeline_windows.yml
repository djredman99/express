jobs:
- job: Windows_MustPass
  strategy:
    maxParallel: 10
    matrix:
      Node 0.10:
        NODE_VERSION: '0.10'
  continueOnError: false
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: |
      $nodeVersion = "$(NODE_VERSION)"
      $nodeMajorVersion = $nodeVersion.split(".")[0]
      Write-Output ("##vso[task.setvariable variable=NodeMajorVersion;]$nodeMajorVersion")
    displayName: "Get Major Version Number of NodeJS Using PowerShell"

  - powershell: |
      Write-Output $(agent.tempDirectory)
      dir "$(agent.tempDirectory)"
      New-Item -Path "$(agent.tempDirectory)" -Name "tmp" -ItemType "directory"
      Invoke-WebRequest -Uri "https://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-noinstall.zip" -OutFile (Join-Path (Join-Path "$(agent.tempDirectory)" "tmp") "nvm-noinstall.zip")

  - task: ExtractFiles@1
    displayName: 'Extract files  Please Work'
    inputs:
      archiveFilePatterns: "$(agent.tempDirectory)\\tmp\\nvm-noinstall.zip"
      destinationFolder: "$(agent.tempDirectory)"
      cleanDestinationFolder: false

  - script: |
      nvm install $NODE_VERSION
      nvm use $NODE_VERSION
    displayName: "Install node version using nvm"

  
  - script: |
      node --version
    displayName: "Node Version"

  - script: |
      npm --version
    displayName: "NPM Version"

  - script: |
      nvm --version
    displayName: "nvm version"

  #Start The Before Install Tasks 
  - script: |
      npm config set shrinkwrap false
    displayName: 'Skip updating shrinkwrap / lock'

  - script: |
      npm rm --silent --save-dev connect-redis
    displayName: 'Remove all non-test dependencies'

  - script: |
      npm install --silent --save-dev mocha@3.5.3
    displayName: 'Setup Node.js version-specific dependencies: mocha for testing: use 3.x for Node.js < 6'
    condition: lt(variables['NodeMajorVersion'], 6)

  - script: |
      npm install --silent --save-dev supertest@2.0.0
    displayName: 'Setup Node.js version-specific dependencies: supertest for http calls: use 2.0.0 for Node.js < 4'
    condition: lt(variables['NodeMajorVersion'], 4)
    
  - powershell: |
      # Prune & rebuild node_modules
      if (Test-Path -Path node_modules) {
          npm prune
          npm rebuild
        }
    displayName: 'Update Node.js modules'

#Finish With Before Install Tasks. Time to install dependencies

  - script: |
      npm install
    displayName: 'npm install'
    
  #Testing
  - script: |
      npm run test-ci
    displayName: 'Run test script'

  - script: |
      npm run lint
    displayName: 'Run linting'